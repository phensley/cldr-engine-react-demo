{"version":3,"sources":["locale/matcher.ts","locale/setup.ts","actions/index.ts","reducers/locale.ts","reducers/calendars.ts","reducers/math.ts","reducers/index.ts","actions/calendars.ts","actions/locale.ts","actions/math.ts","store/index.ts","sagas/initial.ts","sagas/locale.ts","sagas/index.ts","components/utils.tsx","components/Currencies.tsx","components/Dates.tsx","components/DateIntervals.tsx","components/DecimalMath.tsx","components/Lists.tsx","components/Numbers.tsx","components/RelativeTime.tsx","components/Rounding.tsx","components/Info.tsx","components/Nav.tsx","components/InputInfo.tsx","components/Matcher.tsx","components/Switcher.tsx","components/Units.tsx","components/UnitSequences.tsx","components/App.tsx","index.tsx"],"names":["allLocales","CLDRFramework","availableLocales","supported","sort","l","id","localeMatcher","LocaleMatcher","resolve","start","Date","version","Resource","sha256","substring","options","loader","language","EnglishPack","asyncLoader","Promise","reject","wretch","process","get","json","catch","packCacheSize","patternCacheSize","skipChecksum","framework","cldrVersion","cldr","English","elapsed","console","warn","initialLocaleState","icepick","info","undefined","initialCalendarState","dateSkeleton","intervalSkeleton","initialMathState","userA","userB","state","locale","calendar","math","reducer","combineReducers","action","type","payload","calendarChangeDateSkeleton","skeleton","calendarChangeIntervalSkeleton","changeLocale","mathChangeA","value","mathChangeB","REDUX_EXT","composeEnhancers","window","compose","setupStore","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","hot","module","accept","next","require","replaceReducer","runSaga","run","endSaga","dispatch","END","initialSaga","put","stuff","localeSaga","getAsync","call","request","takeEvery","rootSaga","all","fork","renderOptions","opts","className","elems","keys","Object","length","push","key","forEach","k","i","isUnknown","s","toLowerCase","indexOf","languageName","r","General","getLanguageDisplayName","scriptName","getScriptDisplayName","regionName","getRegionDisplayName","NUMBERS","CURRENCIES","OPTIONS","group","style","CurrenciesImpl","map","o","this","props","n","j","toString","c","Numbers","formatCurrency","formatAmount","headings","currencies","React","Currencies","connect","d","ZONES","datetime","date","time","formatDate","zoneId","Calendars","DatesImpl","onChange","e","currentTarget","actions","z","now","len","res","context","result","placeholder","dates","Dates","bindActionCreators","DELTAS","MINUTE","DAY","formatInterval","delta","formatDateInterval","DateIntervalsImpl","intervals","DateIntervals","calculate","as","bs","scale","a","DecimalConstants","ONE","b","Decimal","error","ctx","precision","emit","op","setScale","add","subtract","multiply","divide","DecimalMathImpl","max","pair","operations","DecimalMath","ITEMS","TYPES","ListsImpl","t","items","slice","formatList","Lists","String","Number","MAX_SAFE_INTEGER","Infinity","NaN","maximumFractionDigits","round","NumbersImpl","formatDecimal","numbers","QUANTITIES","FIELDS","renderRow","q","f","formatRelativeTimeField","RelativeTimeImpl","width","times","RelativeTime","MODES","COLORS","WHITE","NUM","color","cls","HEADINGS","row","mode","buildHeadings","ROWS","prev","idx","m","rows","buildRoundingTable","Rounding","backgroundColor","InfoImpl","tag","langID","localLang","englishLang","scriptID","script","localScript","englishScript","regionID","region","localRegion","englishRegion","currency","getCurrencyForRegion","localCurrency","getCurrencyDisplayName","englishCurrency","distance","Info","Nav","href","InputInfoImpl","input","lang","expanded","InputInfo","parseLanguageTag","MatcherImpl","last","match","compact","Matcher","randomLocale","Math","floor","random","SwitcherImpl","onClick","Switcher","QUANTITY","unit","per","minimumSignificantDigits","UnitsImpl","qty","Units","formatQuantity","formatQuanties","units","UnitSequencesImpl","formatQuantitySequence","formatOptions","unitSequences","UnitSequences","AppImpl","showReport","location","dir","characterOrder","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b2a7f240.chunk.js","sourcesContent":["import { CLDRFramework, LocaleMatcher } from '@phensley/cldr';\n\nexport const allLocales = CLDRFramework.availableLocales();\n\nconst supported = allLocales.sort(l => l.id === 'en' ? -1 : 1);\n\nexport const localeMatcher = new LocaleMatcher(supported, { resolve: false });\n","import wretch from 'wretch';\nimport { CLDRFramework, CLDROptions } from '@phensley/cldr';\n\n// Import the resource file containing information about the resource packs\nimport Resource from '@phensley/cldr/packs/resource.json';\n\n// Import default language directly so it's always available\nimport EnglishPack from '@phensley/cldr/packs/en.json';\n\nconst start = +(new Date());\n\n// Copy the sha256 hash of all of the packages, to use for cache busting.\n// Note: Resource files are be copied by the build process with the\n// matching version in the path.\nconst version = Resource.sha256.substring(0, 10);\n\n// Load English synchronously (see below)\nconst loader = (language: string): any => EnglishPack;\n\n// All other languages are loaded asynchronously at runtime\nconst asyncLoader = (language: string): Promise<any> => {\n  return new Promise<any>((resolve, reject) => {\n    if (language === 'en') {\n      resolve(EnglishPack);\n      return;\n    }\n    wretch(`${process.env.PUBLIC_URL}/packs/${language}-${version}.json`)\n      .get()\n      .json(resolve)\n      .catch(reject);\n  });\n};\n\nconst options: CLDROptions = {\n  // Sync blocking loader function\n  loader,\n\n  // Promise-based loader function\n  asyncLoader,\n\n  // Keep up to 8 languages loaded at a time.\n  packCacheSize: 8,\n\n  // Patterns are parsed and cached on demand. This will keep up to\n  // 50 patterns in cache with least-recently-used eviction.\n  patternCacheSize: 50,\n\n  // Our build process ensures we only load resource packs whose hash\n  // matches. Skip calculating the schema checksum.\n  skipChecksum: true\n};\n\n// Global instance of cldr configured for our app\nexport const framework = new CLDRFramework(options);\n\n// Every resource pack includes the version of the cldr it was built from\nexport const cldrVersion = EnglishPack.cldr;\n\n// Default cldr engine to be set in the locale store.\nexport const English = framework.get('en');\n\nconst elapsed = +(new Date()) - start;\nconsole.warn(`cldr static init: ${elapsed} ms`);\n","export * from './calendars';\nexport * from './locale';\nexport * from './math';\nexport * from './types';\n","import { CLDR } from '@phensley/cldr';\nimport { LocaleInfo } from '../actions';\nimport { English } from '../locale';\nimport { AnyAction, Reducer } from 'redux';\nimport * as icepick from 'icepick';\n\nexport interface LocaleState {\n  cldr: CLDR;\n  info?: LocaleInfo;\n}\n\nexport const initialLocaleState: LocaleState = icepick.freeze({\n  cldr: English,\n  info: undefined\n});\n\nexport const locale: Reducer<LocaleState> =\n  (state: LocaleState = initialLocaleState, action: AnyAction): LocaleState => {\n\n  switch (action.type) {\n  case 'locale/change':\n    return icepick.set(state, 'info', action.payload);\n  case 'locale/update':\n    return icepick.set(state, 'cldr', action.payload);\n  }\n  return state;\n};\n","import * as icepick from 'icepick';\nimport { AnyAction, Reducer } from 'redux';\n\nexport interface CalendarState {\n  dateSkeleton: string;\n  intervalSkeleton: string;\n}\n\nexport const initialCalendarState: CalendarState = icepick.freeze({\n  dateSkeleton: 'yMMMMdhmsSSSVVVV',\n  intervalSkeleton: 'yMMMMd'\n});\n\nexport const calendar: Reducer<CalendarState> =\n  (state: CalendarState = initialCalendarState, action: AnyAction): CalendarState => {\n  switch (action.type) {\n  case 'calendar/changeDateSkeleton':\n    return icepick.set(state, 'dateSkeleton', action.payload);\n  case 'calendar/changeIntervalSkeleton':\n    return icepick.set(state, 'intervalSkeleton', action.payload);\n  }\n  return state;\n};\n","import * as icepick from 'icepick';\nimport { AnyAction, Reducer } from 'redux';\n\nexport interface MathState {\n  userA: string;\n  userB: string;\n}\n\nexport const initialMathState: MathState = icepick.freeze({\n  userA: '12345.678',\n  userB: '0.000009'\n});\n\nexport const math: Reducer<MathState> =\n  (state: MathState = initialMathState, action: AnyAction): MathState => {\n    switch (action.type) {\n    case 'math/changeA':\n      return icepick.set(state, 'userA', action.payload);\n    case 'math/changeB':\n      return icepick.set(state, 'userB', action.payload);\n    }\n    return state;\n};\n","import { combineReducers, Reducer } from 'redux';\nimport { initialLocaleState, locale, LocaleState } from './locale';\nimport { initialCalendarState, calendar, CalendarState } from './calendars';\nimport { initialMathState, math, MathState } from './math';\n\nimport * as icepick from 'icepick';\n\nexport interface State {\n  locale: LocaleState;\n  calendar: CalendarState;\n  math: MathState;\n}\n\nexport const state: State = icepick.freeze({\n  locale: initialLocaleState,\n  calendar: initialCalendarState,\n  math: initialMathState\n});\n\nexport const reducer: Reducer<State> = combineReducers<State>({\n  locale,\n  calendar,\n  math\n});\n","import { TimePeriod } from '@phensley/cldr';\nimport { Action } from './types';\n\nexport interface CalendarChangeDateSkeleton extends Action<string> {\n  type: 'calendar/changeDateSkeleton';\n  payload: string;\n}\n\nexport interface CalendarChangeIntervalSkeleton extends Action<string> {\n  type: 'calendar/changeIntervalSkeleton';\n  payload: string;\n}\n\nexport interface CalendarChangeTimePeriod extends Action<TimePeriod> {\n  type: 'calendar/changeTimePeriod';\n  payload: TimePeriod;\n}\n\nexport type CalendarAction =\n  CalendarChangeDateSkeleton |\n  CalendarChangeIntervalSkeleton |\n  CalendarChangeTimePeriod;\n\nexport const calendarChangeDateSkeleton = (skeleton: string): CalendarAction =>\n  ({ type: 'calendar/changeDateSkeleton', payload: skeleton });\n\nexport const calendarChangeIntervalSkeleton = (skeleton: string): CalendarAction =>\n  ({ type: 'calendar/changeIntervalSkeleton', payload: skeleton });\n\nexport const calendarChangeTimePeriod = (period: TimePeriod): CalendarAction =>\n  ({ type: 'calendar/changeTimePeriod', payload: period });\n","import { CLDR, LocaleMatch, LanguageTag } from '@phensley/cldr';\nimport { Action } from './types';\n\nexport interface LocaleInfo extends LocaleMatch {\n  input: LanguageTag;\n}\n\nexport interface LocaleChangeAction extends Action<LocaleInfo> {\n  type: 'locale/change';\n  payload: LocaleInfo;\n}\n\nexport interface LocaleUpdateAction extends Action<CLDR> {\n  type: 'locale/update';\n  payload: CLDR;\n}\n\nexport type LocaleAction =\n  LocaleChangeAction | LocaleUpdateAction;\n\nexport const changeLocale = (info: LocaleInfo): LocaleAction =>\n  ({ type: 'locale/change', payload: info });\n\nexport const updateLocale = (cldr: CLDR): LocaleAction =>\n  ({ type: 'locale/update', payload: cldr });\n","import { Action } from './types';\n\nexport interface MathChangeA extends Action<string> {\n  type: 'math/changeA';\n  payload: string;\n}\n\nexport interface MathChangeB extends Action<string> {\n  type: 'math/changeB';\n  payload: string;\n}\n\nexport type MathAction =\n  MathChangeA | MathChangeB;\n\nexport const mathChangeA = (value: string): MathAction =>\n  ({ type: 'math/changeA', payload: value });\n\nexport const mathChangeB = (value: string): MathAction =>\n  ({ type: 'math/changeB', payload: value });\n","import { applyMiddleware, compose, createStore, Store as ReduxStore } from 'redux';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport { reducer, State } from '../reducers';\n\nconst REDUX_EXT = '__REDUX_DEVTOOLS_EXTENSION_COMPOSE__';\n\ninterface SagaStore<T> extends ReduxStore<T> {\n  runSaga: any;\n  endSaga: any;\n}\n\nconst composeEnhancers = typeof window === 'object' &&\n  window[REDUX_EXT] ? window[REDUX_EXT]({}) : compose;\n\nexport const setupStore = (state: State): SagaStore<State> => {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n  const store = createStore(reducer, state, enhancer) as SagaStore<State>;\n\n  const { hot } = module as any;\n  if (hot) {\n    hot.accept('../reducers', () => {\n      const next = require('../reducers');\n      store.replaceReducer(next);\n    });\n  }\n  store.runSaga = sagaMiddleware.run;\n  store.endSaga = () => store.dispatch(END);\n  return store;\n};\n","import { Action } from 'redux';\nimport { put, PutEffect } from 'redux-saga/effects';\n\nexport interface FooAction extends Action {\n  stuff: string;\n}\n\nexport function* initialSaga(): IterableIterator<PutEffect<FooAction>> {\n  yield put({ type: 'bar', stuff: 'foo' } as FooAction);\n}\n","import { Locale } from '@phensley/cldr';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { Action, LocaleInfo } from '../actions';\nimport { framework } from '../locale';\n\nconst get = (locale: Locale) => framework.getAsync(locale);\n\nexport function* changeLocale(action: Action<LocaleInfo>): IterableIterator<any> {\n  const { locale } = action.payload;\n\n  try {\n    const request = yield call(get, locale);\n    yield put({ type: 'locale/update', payload: request });\n  } catch (e) {\n    yield call(console.warn, e);\n    yield put({ type: 'locale/invalid', locale });\n  }\n}\n\nexport function* localeSaga(): IterableIterator<any> {\n  yield takeEvery('locale/change', changeLocale);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport { initialSaga } from './initial';\nimport { localeSaga } from './locale';\n\nexport function* rootSaga(): IterableIterator<any> {\n  yield all([\n    fork(localeSaga),\n    fork(initialSaga)\n  ]);\n}\n","import * as React from 'react';\nimport { CLDR, LanguageIdType, RegionIdType, ScriptIdType } from '@phensley/cldr';\n\nexport const renderOptions = (opts: any): JSX.Element => {\n  if (opts === undefined) {\n    return <div className='options'>(input)</div>;\n  }\n\n  const elems: JSX.Element[] = [];\n  const keys = Object.keys(opts);\n  if (keys.length === 0) {\n    elems.push(<span key={0}>{'<default>'}</span>);\n  } else {\n    keys.sort().forEach((k, i) => {\n      elems.push(<span key={i}>{i > 0 ? <br /> : ''}{`${k}: ${opts[k]}`}</span>);\n    });\n  }\n  return <div className='options'>{elems}</div>;\n};\n\nconst UNKNOWN = '*';\n\nconst isUnknown = (s: string) => !s || s.toLowerCase().indexOf('unknown') !== -1;\n\nexport const languageName = (cldr: CLDR, id: string): string => {\n  const r = cldr.General.getLanguageDisplayName(id as LanguageIdType);\n  return isUnknown(r) ? UNKNOWN : r;\n};\n\nexport const scriptName = (cldr: CLDR, id: string): string => {\n  const r = cldr.General.getScriptDisplayName(id as ScriptIdType);\n  return isUnknown(r) ? UNKNOWN : r;\n};\n\nexport const regionName = (cldr: CLDR, id: string): string => {\n  const r = cldr.General.getRegionDisplayName(id as RegionIdType);\n  return isUnknown(r) ? UNKNOWN : r;\n};\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, CurrencyType, CurrencyFormatOptions } from '@phensley/cldr';\nimport { State } from '../reducers';\nimport { renderOptions } from './utils';\n\ninterface Props {\n  cldr: CLDR;\n}\n\nconst NUMBERS = [\n  '1',\n  '0',\n  '.098765',\n  '1.07',\n  '-12345.678',\n  '999999.987'\n];\n\nconst CURRENCIES: CurrencyType[] = [\n  'USD', 'EUR', 'GBP', 'JPY', 'CAD', 'AUD', 'RUB'\n];\n\nconst OPTIONS: (CurrencyFormatOptions | undefined)[] = [\n  undefined,\n  { group: true },\n  { style: 'code' },\n  { group: true, style: 'name' },\n  { group: true , style: 'short' },\n  { group: true, style: 'accounting' },\n  { group: true, style: 'code' }\n];\n\nconst formatAmount = (cldr: CLDR, n: string, opts?: CurrencyFormatOptions): JSX.Element => {\n  if (opts === undefined) {\n    return <span className='currency'>{n.toString()}</span>;\n  }\n\n  const elems: JSX.Element[] = [];\n  CURRENCIES.forEach((c, i) => {\n    const s = cldr.Numbers.formatCurrency(n, c, opts);\n    elems.push(<span key={i}>{i > 0 ? <br /> : ''}{s}</span>);\n  });\n  return <span className='currency'>{elems}</span>;\n};\n\nclass CurrenciesImpl extends React.Component<Props> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>\n        {OPTIONS.map((o, i) => <td key={i}>{renderOptions(o)}</td>)}\n      </tr>\n    );\n  }\n\n  currencies(): JSX.Element[] {\n    const { cldr } = this.props;\n    return NUMBERS.map((n, i) => {\n      return (\n        <tr key={i}>\n          {OPTIONS.map((o, j) => <td key={j}>{formatAmount(cldr, n, o)}</td>)}\n        </tr>\n      );\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Currencies</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody>{this.currencies()}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const Currencies = connect(mapState, mapDispatch)(CurrenciesImpl);\n","import * as React from 'react';\nimport { bindActionCreators, AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, DateFormatOptions } from '@phensley/cldr';\nimport { calendarChangeDateSkeleton } from '../actions';\nimport { State } from '../reducers';\nimport { renderOptions } from './utils';\n\nconst DEFAULT_SKELETON = 'yMMMMdhmsSSSVVVV';\n\nconst ZONES: string[] = [\n  'America/New_York', 'Europe/London', 'Asia/Tokyo', 'Pacific/Galapagos'\n];\n\nconst OPTIONS: DateFormatOptions[] = [\n  { datetime: 'medium' },\n  { date: 'full' },\n  { date: 'long' },\n  { date: 'short' },\n  { time: 'full' },\n  { time: 'long' },\n  { time: 'short' },\n  { skeleton: 'yMMMdHmsSSS' },\n  { skeleton: 'yEMMMMBh' }\n];\n\nconst formatDate = (cldr: CLDR, date: Date, zoneId: string, opts: DateFormatOptions): string =>\n  cldr.Calendars.formatDate({ date, zoneId }, opts);\n\nclass DatesImpl extends React.Component<any> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>\n        <td>Format</td>\n        {ZONES.map((z, i) => <td key={i}>{z}</td>)}\n      </tr>\n    );\n  }\n\n  onChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    const { value } = e.currentTarget;\n    this.props.actions.calendarChangeDateSkeleton(value || DEFAULT_SKELETON);\n  }\n\n  dates(): JSX.Element[] {\n    const { cldr } = this.props;\n    const now = new Date();\n    const len = OPTIONS.length;\n    const res = OPTIONS.map((o, i) => {\n      o.context = 'standalone';\n      return (\n        <tr key={i}>\n          <td>{renderOptions(o)}</td>\n          {ZONES.map((z, j) => <td key={j}>{formatDate(cldr, now, z, o)}</td>)}\n        </tr>\n      );\n    });\n\n    // Dynamic skeleton field\n    const context = 'standalone';\n    const { skeleton } = this.props;\n    const result = ZONES.map(z => formatDate(cldr, now, z, { skeleton, context }));\n    res.push(\n      <tr key={len}>\n        <td><input type='text' placeholder={DEFAULT_SKELETON} onChange={this.onChange} /></td>\n        {result.map((r, j) => <td key={j}>{r}</td>)}\n      </tr>\n    );\n    return res;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Dates</h1>\n        <table className='table'>\n          <thead>\n            {this.headings()}\n          </thead>\n          <tbody>\n            {this.dates()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr,\n  skeleton: s.calendar.dateSkeleton\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({\n  actions: bindActionCreators({ calendarChangeDateSkeleton }, d)\n});\n\nexport const Dates = connect(mapState, mapDispatch)(DatesImpl);\n","import * as React from 'react';\nimport { bindActionCreators, AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, ZonedDateTime } from '@phensley/cldr';\nimport { calendarChangeIntervalSkeleton } from '../actions';\nimport { State } from '../reducers';\nimport { renderOptions } from './utils';\n\nconst NEW_YORK = 'America/New_York';\nconst DEFAULT_SKELETON = 'yMMMMd';\n\nconst OPTIONS: any[] = [\n  { skeleton: 'Bh' },\n  { skeleton: 'hmsa' },\n  { skeleton: 'yMMMMd' },\n  { skeleton: 'yMMMdhms' }\n];\n\nconst MINUTE = 60000;\nconst HOUR = 3600000;\nconst DAY = 86400000;\n\ntype Delta = [string, number];\n\nconst DELTAS: Delta[] = [\n  ['17 minutes', MINUTE * 17],\n  ['2.3 hours', HOUR * 2.3],\n  ['19 days', DAY * 19],\n  ['289 days', DAY * 289]\n];\n\nconst formatInterval = (cldr: CLDR, start: ZonedDateTime, delta: number, opts: any): string => {\n  const { date, zoneId } = start;\n  return cldr.Calendars.formatDateInterval(start, { date: +date + delta, zoneId }, opts);\n};\n\nclass DateIntervalsImpl extends React.Component<any> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>\n        <td />\n        {DELTAS.map((d, j) => <td key={j}>{d[0]}</td>)}\n      </tr>\n    );\n  }\n\n  onChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    const { value } = e.currentTarget;\n    this.props.actions.calendarChangeIntervalSkeleton(value || DEFAULT_SKELETON);\n  }\n\n  intervals(): JSX.Element[] {\n    const { cldr, skeleton } = this.props;\n    const start: ZonedDateTime = { date: new Date(), zoneId: NEW_YORK };\n    const len = OPTIONS.length;\n    const res = OPTIONS.map((o, i) => {\n      o.context = 'standalone';\n      return (\n        <tr key={i}>\n          <td>{renderOptions(o)}</td>\n          {DELTAS.map((d, j) => <td key={j}>{formatInterval(cldr, start, d[1], o)}</td>)}\n        </tr>\n      );\n    });\n\n    const opts = { skeleton, context: 'standalone' };\n    const result = DELTAS.map(d => formatInterval(cldr, start, d[1], opts));\n    res.push(\n      <tr key={len}>\n        <td><input type='text' placeholder={DEFAULT_SKELETON} onChange={this.onChange} /></td>\n        {result.map((r, j) => <td key={j}>{r}</td>)}\n      </tr>\n    );\n\n    return res;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n          <h1>Date Intervals</h1>\n          <table className='table'>\n            <thead className='options'>\n              {this.headings()}\n            </thead>\n            <tbody>\n              {this.intervals()}\n            </tbody>\n          </table>\n      </div>\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr,\n  skeleton: s.calendar.intervalSkeleton\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({\n  actions: bindActionCreators({ calendarChangeIntervalSkeleton }, d)\n});\n\nexport const DateIntervals = connect(mapState, mapDispatch)(DateIntervalsImpl);\n","import * as React from 'react';\nimport { bindActionCreators, AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { Decimal, DecimalConstants } from '@phensley/cldr';\n\nimport { State } from '../reducers';\nimport { mathChangeA, mathChangeB } from '../actions';\n\nconst SCALE_1 = 3;\nconst SCALE_2 = 20;\n\nconst DEFAULT_A = '123.45';\nconst DEFAULT_B = '0.0009';\n\ntype Pair = [string, string];\n\nconst NUMBERS: Pair[] = [\n  ['-10', '-6'],\n  ['7.365', '0'],\n  ['-5', '17.311'],\n  ['15.7e20', '3.1415926535897932384']\n];\n\nconst calculate = (as: string, bs: string, scale: number): JSX.Element => {\n  let i = 0;\n  const elems: JSX.Element[] = [];\n  let a: Decimal = DecimalConstants.ONE;\n  let b: Decimal = DecimalConstants.ONE;\n  try {\n    a = new Decimal(as);\n    b = new Decimal(bs);\n  } catch (error) {\n    elems.push(<span key={i++}>{error.toString()}</span>);\n    return <code>{elems}</code>;\n  }\n\n  // precision for math operations\n  const ctx = { precision: 100 };\n  const emit = (op: string, d: Decimal) =>\n    elems.push(<span key={i++}>A{op}B&nbsp;=&nbsp;{d.setScale(scale).toString()}<br/></span>);\n\n  emit('+', a.add(b));\n  emit('-', a.subtract(b));\n  emit('*', a.multiply(b, ctx));\n  try {\n    const r = a.divide(b, ctx);\n    emit('/', r);\n  } catch (error) {\n    elems.push(<span key={i++}>{error.toString()}</span>);\n  }\n  return <code>{elems}</code>;\n};\n\nexport class DecimalMathImpl extends React.Component<any> {\n\n  onChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    const { id, value } = e.currentTarget;\n    if (id === 'userA') {\n      this.props.actions.mathChangeA(value || DEFAULT_A);\n    } else {\n      this.props.actions.mathChangeB(value || DEFAULT_B);\n    }\n  }\n\n  headings(): JSX.Element {\n    return (\n        <tr>\n        <td>A</td>\n        <td>B</td>\n        <td>scale={SCALE_1}</td>\n        <td>scale={SCALE_2}</td>\n      </tr>\n    );\n  }\n\n  operations(): JSX.Element[] {\n    const { userA, userB } = this.props;\n    const max = NUMBERS.length;\n    const res = NUMBERS.map((pair, i) => {\n      const [a, b] = pair;\n      return (\n        <tr key={i}>\n          <td>{a}</td>\n          <td>{b}</td>\n          <td>{calculate(a, b, SCALE_1)}</td>\n          <td>{calculate(a, b, SCALE_2)}</td>\n        </tr>\n      );\n    });\n    res.push((\n      <tr key={max}>\n        <td><input type='text' id='userA' placeholder={DEFAULT_A} onChange={this.onChange} /></td>\n        <td><input type='text' id='userB' placeholder={DEFAULT_B} onChange={this.onChange} /></td>\n        <td>{calculate(userA, userB, SCALE_1)}</td>\n        <td>{calculate(userA, userB, SCALE_2)}</td>\n      </tr>\n    ));\n    return res;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Arbitrary-precision math</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody className='math'>{this.operations()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  userA: s.math.userA,\n  userB: s.math.userB\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({\n  actions: bindActionCreators({ mathChangeA, mathChangeB }, d)\n});\n\nexport const DecimalMath = connect(mapState, mapDispatch)(DecimalMathImpl);\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR } from '@phensley/cldr';\nimport { State } from '../reducers';\n\ninterface Props {\n  cldr: CLDR;\n}\n\nconst ITEMS = ['one', 'two', 'three', 'four', 'five'];\nconst TYPES = ['and', 'or', 'unit-long'];\n\nclass ListsImpl extends React.Component<Props> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>\n        {TYPES.map((t, i) => <td key={i}>{t}</td>)}\n      </tr>\n    );\n  }\n\n  items(): JSX.Element[] {\n    const { cldr } = this.props;\n    const res: JSX.Element[] = [];\n    for (let i = 0; i < ITEMS.length; i++) {\n      const items = ITEMS.slice(0, i + 1);\n      // TODO: export ListPatternType and use a map\n      const lists = [\n        cldr.General.formatList(items, 'and'),\n        cldr.General.formatList(items, 'or'),\n        cldr.General.formatList(items, 'unit-long')\n      ];\n      const elems = lists.map((e, j) => (<td key={j}>{e}</td>));\n      res.push(<tr key={i}>{elems}</tr>);\n    }\n    return res;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Lists</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody>{this.items()}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const Lists = connect(mapState, mapDispatch)(ListsImpl);\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, DecimalFormatOptions, DecimalArg } from '@phensley/cldr';\nimport { State } from '../reducers';\nimport { renderOptions } from './utils';\n\ninterface Props {\n  cldr: CLDR;\n}\n\nconst NUMBERS = [\n  '.098765',\n  '1.07',\n  '12345.678',\n  '999999.987',\n  String(Number.MAX_SAFE_INTEGER),\n  Infinity,\n  NaN\n];\n\nconst OPTIONS: (DecimalFormatOptions | undefined)[] = [\n  undefined,\n  { group: true },\n  { group: true, maximumFractionDigits: 1 },\n  { group: true, maximumFractionDigits: 0, round: 'floor' },\n  { style: 'short', maximumFractionDigits: 1, group: true },\n  { style: 'long', group: true }\n];\n\nconst formatDecimal = (cldr: CLDR, n: DecimalArg, opts?: DecimalFormatOptions) => {\n  if (opts === undefined) {\n    return n.toString();\n  }\n  return cldr.Numbers.formatDecimal(n, opts);\n};\n\nclass NumbersImpl extends React.Component<Props> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>\n        {OPTIONS.map((o, i) => <td key={i}>{renderOptions(o)}</td>)}\n      </tr>\n    );\n  }\n\n  numbers(): JSX.Element[] {\n    const { cldr } = this.props;\n    return NUMBERS.map((n, i) => {\n      return (\n        <tr key={i}>\n          {OPTIONS.map((o, j) => <td key={j}>{formatDecimal(cldr, n, o)}</td>)}\n        </tr>\n      );\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Numbers</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody>{this.numbers()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const Numbers = connect(mapState, mapDispatch)(NumbersImpl);\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, RelativeTimeFieldType, RelativeTimeFormatOptions } from '@phensley/cldr';\nimport { State } from '../reducers';\n\ninterface Props {\n  cldr: CLDR;\n}\n\nconst QUANTITIES = [\n  -5, -1, 0, 1, 7\n];\n\nconst FIELDS: RelativeTimeFieldType[] = [\n  'second', 'hour', 'day', 'week', 'month', 'tue', 'year'\n];\n\nconst renderRow = (cldr: CLDR, i: number, q: number, opts: RelativeTimeFormatOptions): JSX.Element => {\n  opts.context = 'standalone';\n  const result = FIELDS.map(f => cldr.Calendars.formatRelativeTimeField(q, f, opts));\n  return (\n    <tr key={i}>\n      {result.map((r, j) => <td key={j}>{r}</td>)}\n    </tr>\n  );\n};\n\nclass RelativeTimeImpl extends React.Component<Props> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>\n        {FIELDS.map((f, i) => <td key={i}>{f}</td>)}\n      </tr>\n    );\n  }\n\n  times(): JSX.Element[] {\n    const { cldr } = this.props;\n    const elems: JSX.Element[] = [];\n    let i = 0;\n    QUANTITIES.forEach(q => {\n      elems.push(renderRow(cldr, i++, q, {}));\n      elems.push(renderRow(cldr, i++, q, { width: 'narrow' }));\n    });\n    return elems;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Relative times</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody>{this.times()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const RelativeTime = connect(mapState, mapDispatch)(RelativeTimeImpl);\n","import * as React from 'react';\n\nimport { Decimal, RoundingModeType } from '@phensley/cldr';\n\nconst MODES: string[] = [\n  'ceiling', 'floor', '', 'down', 'up',\n  '', 'half-even', 'half-down', 'half-up'\n];\n\nconst COLORS: string[] = [\n  '#cceecc',\n  '#cceeee',\n  '#eeeecc',\n  '#ddddee',\n  '#ffffff'\n];\n\ninterface Entry {\n  value: string;\n  color: string;\n  cls: string;\n}\n\nconst WHITE = '#ffffff';\nconst NUM = { value: '#', color: WHITE, cls: '' };\n\nconst buildHeadings = (): Entry[] => {\n  const row: Entry[] = [NUM];\n  for (let i = 0; i < MODES.length; i++) {\n    const mode = MODES[i];\n    row.push({ value: mode, color: WHITE, cls: '' });\n  }\n  row.push(NUM);\n  return row;\n};\n\nconst buildRoundingTable = (): Entry[][] => {\n  // Color indices\n  const idx: number[] = MODES.map(m => 0);\n\n  const rows: Entry[][] = [];\n  let prev: Entry[] | undefined;\n\n  let n = new Decimal('-2.1');\n\n  for (let i = 0; i < 41; i++) {\n    n = n.add('0.1');\n\n    const row: Entry[] = [];\n    row.push({ value: n.toString(), color: WHITE, cls: '' });\n\n    for (let j = 0; j < MODES.length; j++) {\n      const mode = MODES[j];\n      let value = ' ';\n      let cls = 'spacer';\n      let color = WHITE;\n      if (mode) {\n        value = n.setScale(0, mode as RoundingModeType).toString();\n        cls = `mode-${mode}`;\n        if (prev && prev[j + 1].value !== value) {\n          idx[j]++;\n        }\n        color = COLORS[idx[j]];\n      }\n      row.push({ value, color, cls });\n    }\n\n    row.push({ value: n.toString(), color: WHITE, cls: '' });\n    prev = row;\n    rows.push(row);\n  }\n  return rows;\n};\n\nconst HEADINGS = buildHeadings();\nconst ROWS = buildRoundingTable();\n\nclass RoundingImpl extends React.Component<any> {\n\n  headings():  JSX.Element {\n    return (\n      <tr>\n        {HEADINGS.map((e, i) => <th key={i} className={e.cls}><pre>{e.value}</pre></th>)}\n      </tr>\n    );\n  }\n\n  row(row: Entry[], i: number): JSX.Element {\n    return (\n      <tr key={i}>\n        {row.map((e, j) => <td style={{backgroundColor: e.color }} className={e.cls} key={j}>{e.value}</td>)}\n      </tr>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Rounding Modes</h1>\n        <table className='rounding'>\n          <thead>\n            {this.headings()}\n          </thead>\n          <tbody>\n            {ROWS.map((row, i) => this.row(row, i))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport const Rounding = RoundingImpl;\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR } from '@phensley/cldr';\nimport { LocaleInfo } from '../actions';\nimport { English } from '../locale';\nimport { State } from '../reducers';\nimport { languageName, scriptName, regionName } from './utils';\n\ninterface Props {\n  cldr: CLDR;\n  info: LocaleInfo | undefined;\n}\n\nclass InfoImpl extends React.Component<Props> {\n\n  render(): JSX.Element {\n    const { cldr, info } = this.props;\n    const { id, tag } = cldr.General.locale();\n\n    const langID = tag.language();\n    const localLang = languageName(cldr, langID);\n    const englishLang = languageName(English, langID);\n\n    const scriptID = tag.script();\n    const localScript = scriptName(cldr, scriptID);\n    const englishScript = scriptName(English, scriptID);\n\n    const regionID = tag.region();\n    const localRegion = regionName(cldr, regionID);\n    const englishRegion = regionName(English, regionID);\n\n    const currency = cldr.Numbers.getCurrencyForRegion(regionID);\n    const localCurrency = cldr.Numbers.getCurrencyDisplayName(currency);\n    const englishCurrency = English.Numbers.getCurrencyDisplayName(currency);\n\n    return (\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>Distance</th>\n              <th>ID</th>\n              <th>Language Tag</th>\n              <th>Language</th>\n              <th>Script</th>\n              <th>Region</th>\n              <th>Region Currency</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{info ? info.distance : 0}<br/>&nbsp;</td>\n              <td>{id}<br/>&nbsp;</td>\n              <td>{tag.toString()}<br/>&nbsp;</td>\n              <td>\n                {localLang}\n                <br/>{localLang !== englishLang ? `(${englishLang})` : '\\u00a0'}\n              </td>\n              <td>\n                {localScript}\n                <br/>{localScript !== englishScript ? `(${englishScript})` : '\\u00a0'}\n              </td>\n              <td>\n                {localRegion}\n                <br/>{localRegion !== englishRegion ? `(${englishRegion})` : '\\u00a0'}\n              </td>\n              <td>\n                {currency} - {localCurrency}\n                <br/>{localCurrency !== englishCurrency ? `(${englishCurrency})` : '\\u00a0'}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n    );\n  }\n\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr,\n  info: s.locale.info\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const Info = connect(mapState, mapDispatch)(InfoImpl);\n","import * as React from 'react';\nimport { CLDRFramework } from '@phensley/cldr';\nimport { cldrVersion } from '../locale';\n\nexport class Nav extends React.Component<any> {\n\n  render(): JSX.Element {\n    const version = CLDRFramework.version();\n    return (\n      <nav className='nav'>\n        <div className='container'>\n          <a\n            href='https://github.com/phensley/cldr-engine'\n            className='pagename'\n          >\n            @phensley/cldr\n          </a>\n          <a href='https://github.com/phensley/cldr-engine-react-demo'>Demo Github</a>\n          <span className='version'>{version} &mdash; cldr data {cldrVersion}</span>\n        </div>\n      </nav>\n    );\n  }\n\n}\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR } from '@phensley/cldr';\nimport { LocaleInfo } from '../actions';\nimport { English } from '../locale';\nimport { State } from '../reducers';\nimport { languageName, regionName, scriptName } from './utils';\n\ninterface Props {\n  cldr: CLDR;\n  info: LocaleInfo | undefined;\n}\n\nclass InputInfoImpl extends React.Component<Props> {\n\n  render(): JSX.Element {\n    const { info } = this.props;\n    if (info) {\n      const { input, locale } = info;\n      if (input && locale) {\n        const lang = languageName(English, input.language());\n        const script = scriptName(English, input.script());\n        const region = regionName(English, input.region());\n        return (\n          <table>\n            <tbody>\n              <tr>\n                <td className='userinput'>{input.expanded()}</td>\n                <td className='arrow'>{'\\u27ad'}</td>\n                <td className='identity'>{lang}</td>\n                <td className='identity'>{script}</td>\n                <td className='identity'>{region}</td>\n              </tr>\n            </tbody>\n          </table>\n        );\n      }\n    }\n    return <table />;\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr,\n  info: s.locale.info\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const InputInfo = connect(mapState, mapDispatch)(InputInfoImpl);\n","import * as React from 'react';\nimport { bindActionCreators, AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, CLDRFramework } from '@phensley/cldr';\nimport { InputInfo } from './InputInfo';\nimport { changeLocale, LocaleInfo } from '../actions';\nimport { localeMatcher } from '../locale';\nimport { State } from '../reducers';\n\nconst { parseLanguageTag } = CLDRFramework;\n\ninterface Props {\n  cldr: CLDR;\n  actions: any;\n}\n\nclass MatcherImpl extends React.Component<Props> {\n\n  last?: LocaleInfo;\n\n  onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    let { value } = e.currentTarget;\n    if (value === '') {\n      value = 'und';\n    }\n    const input = parseLanguageTag(value);\n    const match = localeMatcher.match(value);\n    this.last = { ...match, input };\n    this.props.actions.changeLocale(this.last);\n  }\n\n  placeholder = (): string => {\n    const locale = this.props.cldr.General.locale();\n    return `(${locale.tag.compact()})`;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className='matcher'>\n        <div>\n          <b>Tag</b>\n          <input\n            type='text'\n            className='smooth'\n            placeholder={this.placeholder()}\n            onChange={this.onChange}\n          />\n        </div>\n        <InputInfo />\n      </div>\n    );\n  }\n\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({\n  actions: bindActionCreators({ changeLocale }, d)\n});\n\nexport const Matcher = connect(mapState, mapDispatch)(MatcherImpl);\n","import * as React from 'react';\nimport { bindActionCreators, AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { Locale } from '@phensley/cldr';\n\nimport { changeLocale } from '../actions';\nimport { allLocales } from '../locale';\nimport { State } from '../reducers';\nimport { Info } from './Info';\nimport { Nav } from './Nav';\nimport { Matcher } from './Matcher';\n\nconst randomLocale = () => {\n  const len = allLocales.length;\n  const idx = Math.floor(Math.random() * len);\n  return allLocales[idx];\n};\n\nclass SwitcherImpl extends React.Component<any> {\n\n  changeLocale = (): void => {\n    const locale = this.props.cldr.General.locale();\n    let next: Locale = locale;\n    while (next.id === locale.id) {\n      next = randomLocale();\n    }\n    this.props.actions.changeLocale({ locale: next, distance: 0 });\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className='switcher'>\n        <Nav />\n        <div className='row'>\n          <Matcher />\n          <button className='btn btn-a btn-sm smooth' onClick={this.changeLocale}>\n          Random Locale\n          </button>\n        </div>\n        <div className='row'>\n          <Info />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({\n  actions: bindActionCreators({ changeLocale }, d)\n});\n\nexport const Switcher = connect(mapState, mapDispatch)(SwitcherImpl);\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, Quantity, UnitFormatOptions } from '@phensley/cldr';\nimport { State } from '../reducers';\nimport { renderOptions } from './utils';\n\ninterface Props {\n  cldr: CLDR;\n}\n\nconst NUMBERS: string[] = [\n  '.9997',\n  '12345.6789',\n  '1200599.3999'\n];\n\nconst QUANTITY: Quantity[] = [];\n\nNUMBERS.forEach(value => {\n  QUANTITY.push({ value, unit: 'foot' });\n  QUANTITY.push({ value, unit: 'kilogram' });\n  QUANTITY.push({ value, unit: 'pound', per: 'square-inch' });\n  QUANTITY.push({ value, unit: 'gigabyte', per: 'second' });\n  QUANTITY.push({ value, unit: 'light-year' });\n  QUANTITY.push({ value, unit: 'newton', times: 'meter' });\n  QUANTITY.push({ value, unit: 'foot', times: 'pound' });\n});\n\nconst OPTIONS: UnitFormatOptions[] = [\n  { group: true },\n  { style: 'long', length: 'short' },\n  { length: 'narrow' },\n  { length: 'short' },\n  { style: 'short', length: 'short', minimumSignificantDigits: 3 },\n];\n\nconst formatQuanties = (cldr: CLDR, qty: Quantity, opts: UnitFormatOptions): JSX.Element => {\n  const s = cldr.Units.formatQuantity(qty, opts);\n  return <span className='unit'>{s}</span>;\n};\n\nclass UnitsImpl extends React.Component<Props> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>{OPTIONS.map((o, i) => <td key={i}>{renderOptions(o)}</td>)}</tr>\n    );\n  }\n\n  units(): JSX.Element[] {\n    const { cldr } = this.props;\n    return QUANTITY.map((qty, i) => {\n      return (\n        <tr key={i}>\n          {OPTIONS.map((o, j) => <td key={j}>{formatQuanties(cldr, qty, o)}</td>)}\n        </tr>\n      );\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Units</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody>{this.units()}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const Units = connect(mapState, mapDispatch)(UnitsImpl);\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CLDR, Quantity, UnitFormatOptions } from '@phensley/cldr';\nimport { State } from '../reducers';\nimport { renderOptions } from './utils';\n\ninterface Props {\n  cldr: CLDR;\n}\n\nconst OPTIONS: UnitFormatOptions[] = [\n  { },\n  { length: 'short' },\n  { length: 'narrow' }\n];\n\nconst QUANTITIES: Quantity[][] = [\n  [\n    { value: '4', unit: 'day' },\n    { value: '6', unit: 'hour' },\n    { value: '45', unit: 'minute' },\n    { value: '39.9', unit: 'second' }\n  ],\n  [\n    { value: '927', unit: 'degree' },\n    { value: '49', unit: 'arc-minute' },\n    { value: '17.2', unit: 'arc-second' }\n  ],\n  [\n    { value: '15', unit: 'mile' },\n    { value: '1', unit: 'foot' },\n    { value: '9.3', unit: 'inch' }\n  ],\n  [\n    { value: '102', unit: 'ton' },\n    { value: '173', unit: 'pound' },\n    { value: '8.17', unit: 'ounce' }\n  ]\n];\n\nconst formatOptions = (cldr: CLDR, qty: Quantity[], opts: UnitFormatOptions): JSX.Element => {\n  const s = cldr.Units.formatQuantitySequence(qty, opts);\n  return <span className='unit'><span>{s}</span></span>;\n};\n\nclass UnitSequencesImpl extends React.Component<Props> {\n\n  headings(): JSX.Element {\n    return (\n      <tr>{OPTIONS.map((o, i) => <td key={i}>{renderOptions(o)}</td>)}</tr>\n    );\n  }\n\n  unitSequences(): JSX.Element[] {\n    const { cldr } = this.props;\n    return QUANTITIES.map((q, i) => {\n      return (\n        <tr key={i}>\n          {OPTIONS.map((o, j) => <td key={j}>{formatOptions(cldr, q, o)}</td>)}\n        </tr>\n      );\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <h1>Unit Sequences</h1>\n        <table className='table'>\n          <thead className='options'>{this.headings()}</thead>\n          <tbody>{this.unitSequences()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\n\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({});\n\nexport const UnitSequences = connect(mapState, mapDispatch)(UnitSequencesImpl);\n","import * as React from 'react';\nimport { AnyAction, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers';\n\nimport './App.css';\n// import { CalendarMath } from './CalendarMath';\nimport { Currencies } from './Currencies';\nimport { Dates } from './Dates';\nimport { DateIntervals } from './DateIntervals';\nimport { DecimalMath } from './DecimalMath';\nimport { Lists } from './Lists';\nimport { Numbers } from './Numbers';\nimport { RelativeTime } from './RelativeTime';\nimport { Rounding } from './Rounding';\nimport { Switcher } from './Switcher';\nimport { Units } from './Units';\nimport { UnitSequences } from './UnitSequences';\n\nclass AppImpl extends React.Component<any> {\n\n  showReport = () => window.location.href = `${process.env.PUBLIC_URL}/report.html`;\n\n  render(): JSX.Element {\n    const { cldr } = this.props;\n    const dir = cldr.General.characterOrder();\n    return (\n      <div>\n        <Switcher />\n        <div className='spacer'>&nbsp;</div>\n        <div className='wrapper' dir={dir}>\n          <Numbers />\n          <Currencies />\n          <Dates />\n          <DateIntervals />\n          {/* <CalendarMath /> */}\n          <RelativeTime />\n          <Units />\n          <UnitSequences />\n          <DecimalMath />\n          <Rounding />\n          <Lists />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (s: State) => ({\n  cldr: s.locale.cldr\n});\nconst mapDispatch = (d: Dispatch<AnyAction>) => ({ });\n\nexport const App = connect(mapState, mapDispatch)(AppImpl);\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { state } from './reducers';\nimport { setupStore } from './store';\nimport { rootSaga } from './sagas';\n\nimport { App } from './components/App';\nimport './index.css';\n\nconst store = setupStore(state);\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}